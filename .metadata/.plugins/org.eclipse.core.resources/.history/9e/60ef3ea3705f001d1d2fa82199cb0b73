package clase1binario;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class ArbolBinario  {
	private NodoArbol r;
	private static int id = 0;
	
	public ArbolBinario () {
		r = null;
	}
	
	public void crear(NodoArbol x) {
		Scanner sc = new Scanner(System.in);
		
		int cur = id;
		
		Foto e = new Foto("cole" + cur, cur);
		x.setElem(e);
		
		System.out.print(cur + " Tiene hijo izq s/n: ");
		String op = sc.next();
		if (op.equals("s")) {
			id++;
			x.setIzq(new NodoArbol());
			crear(x.getIzq());
		}
		
		System.out.print(cur + " Tiene hijo der s/n: ");
		op = sc.next();
		if (op.equals("s")) {
			id++;
			x.setDer(new NodoArbol());
			crear(x.getDer());
		}
	}
	
	public void preorden(NodoArbol x) {
		if (x != null) {
			System.out.println(x.getElem());
			preorden(x.getIzq());
			preorden(x.getDer());
		}
	}
	
	public void inorden(NodoArbol x) {
		if (x != null) {
			inorden(x.getIzq());
			System.out.println(x.getElem());
			inorden(x.getDer());
		}
	}
	
	public void postorden(NodoArbol x) {
		if (x != null) {
			postorden(x.getIzq());
			postorden(x.getDer());
			System.out.println(x.getElem());
		}
	}
	
	public void hojas (NodoArbol x) { // mostrar nodos hoja
		if (x != null) {
			if (x.getIzq() == null && x.getDer() == null) {
				System.out.println(x.getElem());
			}
			hojas(x.getIzq());
			hojas(x.getDer());
		}
	}
	
	public int nroHojas (NodoArbol x) { //nro nodos hojas
		int cnt = 0;
		if (x != null) {
			if (x.getIzq() == null && x.getDer() == null) 
				cnt = 1;
			else
				cnt = nroHojas(x.getIzq()) + nroHojas(x.getDer());
		}
		return cnt;
	}
	
	public void niveles (NodoArbol x) {
		Cola q = new Cola();
		q.adicionar(x.getElem());
		
		
	}

	public NodoArbol getR() {
		return r;
	}

	public void setR(NodoArbol r) {
		this.r = r;
	}

	
	
	
}
